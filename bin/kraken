#!/usr/bin/env python
# -*- coding: utf8 -*-

import subprocess
import os
import sys


# Determine platform and set path to GitKaken correspondingly
if sys.platform == 'darwin':
    kraken_path = '/Applications/GitKraken.app/Contents/MacOS/GitKraken'
else:
    print("Not implemented!", file=sys.stderr)
    sys.exit(1)

# If the user provided a path for the repo, check that it exists, and get the absolute version of it
if len(sys.argv) == 2:
    if os.path.isdir(sys.argv[1]):
        repo_path = os.path.abspath(sys.argv[1])
    else:
        print("Specified path not exist", file=sys.stderr)
        sys.exit(1)
# Call 'git rev-parse' to acquire top level of repo, relative to current working directory
else:
    try:
        repo_path = subprocess.check_output('git rev-parse --show-toplevel'.split()).strip().decode('utf-8')
        print("Opening repo at", repo_path, end='\n\n')
    except Exception as e:
        print("Cound not find a git repository!", file=sys.stderr)
        sys.exit(1)

# Open git kraken
subprocess.call([kraken_path, '--path', repo_path])

