[user]
	name = NAME
	email = EMAIL

[core]
	# always checkout as LF, but correct accidental CRLF on input
	# ref http://git-scm.com/book/en/v2/Customizing-Git-Git-Configuration#Formatting-and-Whitespace
	autocrlf = input
	whitespace = fix,space-before-tab,tab-in-indent,trailing-space
	excludesfile = ~/.dotfiles/conf/gitignore.conf
	fileMode = false

[apply]
	whitespace = warn

[push]
	# create an upstream automatically when pushing 
	default = current

# rebase by default when pulling
[pull]
	rebase = true

# prune deleted branches automatically when fetching from origin
[remote "origin"]
	prune = true

# reuse recorded resolution when resolving conflicts
[rerere]
	enabled = 1

[alias]
	br = branch -vv --sort=-committerdate
	ci = commit
	# overwrite previous commit without editing message
	amend = commit --amend --no-edit
	co = checkout
	cl = clone
	df = diff
	dfs = diff --staged
	dt = difftool
	g = grep -I
	lg = log --graph --date=short --pretty=format:'%C(red)%h %Cgreen(%cr) %C(cyan)<%an> %Creset%s %C(yellow)%d'
	rv = review
	st = status -b 
	# pull, then push
	pp = !"echo pulling ...; git pull; echo pushing ...; git push"
	ps = push
	pl = pull
	pls = !"echo stashing..; git s; echo pulling..; git pull; echo popping..; git sp"
	cleanup = "!git branch --merged | grep  -v '\\*\\|master\\|dev' | xargs -n 1 git branch -d"
	# returns the root path of the repository
	# for use with "alias cr=$(cd git root)'
	root = !pwd
	ksdiff = difftool -y -t kaleidoscope
	jsondiff = difftool -y -t jsondiff
	# print current sha
	sha = rev-parse --short HEAD
	# stash all current work
	s = stash --include-untracked
	# stash only untracked files
	su = !"git stash; git stash -u; git stash pop stash@{1}"
	# pop stash
	sp = stash pop
	# pop head
	rh = reset HEAD^

	# commit all changes as a "wip commit"
	# this is often cleaner to put in a wip branch
	# than to stash it. Stashes are often hard to keep track of
	# when you have many parallell works in progress
	wip = !"cd $(git root); git add .; git commit -m 'wip'"

	r = rebase
	praise = blame

#############################################################
[color]
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

############################################################
[diff]
	tool = idea
[merge]
	tool = idea
	log = true

[difftool]
	prompt = false
[mergetool]
	prompt = false

# Kaleidoscope
[difftool "kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path "$MERGED" -- "$LOCAL" "$REMOTE"
[mergetool "kaleidoscope"]
	cmd = ksdiff --merge --output "$MERGED" --base "$BASE" -- "$LOCAL" --snapshot "$REMOTE" --snapshot

# Kdiff3
[difftool "kdiff3"]
	cmd = kdiff3 "$LOCAL" "$REMOTE"
[mergetool "kdiff3"]
	cmd = kdiff3 "$BASE" "$LOCAL" "$REMOTE" -o "$MERGED"

# Intellij IDEA
[difftool "idea"]
	cmd = idea diff "$LOCAL" "$REMOTE"
[mergetool "idea"]
	cmd = idea merge "$LOCAL" "$REMOTE" "$BASE" "$MERGED"

# json-diff 
# https://www.npmjs.com/package/json-diff
[difftool "jsondiff"]
	cmd = json-diff "$LOCAL" "$REMOTE"
